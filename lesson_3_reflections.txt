When would you want to use a remote repository rather than keeping all your work
local?

    When working with another developers or when accessing from several devices

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Because we need a clean working directory to do that. We know when it's best to update our local repo.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks is the natural thing to do if you want to make your own development from an already existing project from another person.
    You clone when you want to duplicate a repo's code, probably for working with it in a device in which it didn't exist a copy of the code.
    A branch is another line of development for fixing a bug or making a new feature.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    You can work offline. Also you have all the complete history of changes made in other repo for coming back to rebuild the commits history from the early beginning

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    I would collaborate by committing my changes to the upstream repo when it's safe and updating my local repo from upstream. Also I would use pull requests for suggesting changes in other branches to my mates. Without an "origin" repo or upstream repo, any collaboration would be much harder.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
